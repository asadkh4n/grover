{
  "stats": {
    "suites": 1,
    "tests": 26,
    "passes": 24,
    "pending": 0,
    "failures": 2,
    "start": "2021-08-24T11:51:37.518Z",
    "end": "2021-08-24T11:54:46.032Z",
    "duration": 188514,
    "testsRegistered": 26,
    "passPercent": 92.3076923076923,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "882fb9a2-4be2-44c7-832d-80be3d308b85",
      "title": "",
      "fullFile": "cypress/integration/features/sort.feature",
      "file": "cypress/integration/features/sort.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "409a1a20-ab97-47c3-8a65-ad317ebce194",
          "title": "Sorting and filtering the Film list",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sort the film list (example #1)",
              "fullTitle": "Sorting and filtering the Film list Sort the film list (example #1)",
              "timedOut": null,
              "duration": 6849,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ad4d3c30-8c26-4ac8-908e-088275cea871",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sort the film list (example #2)",
              "fullTitle": "Sorting and filtering the Film list Sort the film list (example #2)",
              "timedOut": null,
              "duration": 6193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "251b6fcc-09dd-4b8f-8a81-4e315b850e67",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sort the film list (example #3)",
              "fullTitle": "Sorting and filtering the Film list Sort the film list (example #3)",
              "timedOut": null,
              "duration": 6274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b14d6b5c-6364-4e04-8e9d-3f9b62d1c911",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sort the film list (example #4)",
              "fullTitle": "Sorting and filtering the Film list Sort the film list (example #4)",
              "timedOut": null,
              "duration": 6895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0c8fe110-1ecf-46da-be8a-534725ac0591",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Sort the film list (example #5)",
              "fullTitle": "Sorting and filtering the Film list Sort the film list (example #5)",
              "timedOut": null,
              "duration": 6786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "af6644c0-18e1-48ae-abf4-3a0059fa2cc2",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #1)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #1)",
              "timedOut": null,
              "duration": 5759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f19d0229-d31f-478a-bec0-8d7cc126ce79",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #2)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #2)",
              "timedOut": null,
              "duration": 5129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8943057e-12be-41ac-8f32-b95aa70ce6d4",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #3)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #3)",
              "timedOut": null,
              "duration": 5932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f8a282b-1057-4124-aa16-90ff3a9e09ed",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #4)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #4)",
              "timedOut": null,
              "duration": 5022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b22de56c-c0b5-4155-be8b-a29a4f87abed",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #5)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #5)",
              "timedOut": null,
              "duration": 4983,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b85d2c89-96ed-4a01-80c0-18bf6b8b11a3",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #6)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #6)",
              "timedOut": null,
              "duration": 5713,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8a8cfa5d-ffdf-413b-8aef-bd66f426deea",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #7)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #7)",
              "timedOut": null,
              "duration": 5144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "82d8daae-0774-4b8f-a906-b4f930f2a12d",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #8)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #8)",
              "timedOut": null,
              "duration": 5948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "18416b0e-1e25-48ee-a7ec-d88582ff33ac",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #9)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #9)",
              "timedOut": null,
              "duration": 5396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "44de14f0-9ad2-4f03-92a6-90911aad6d75",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #10)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #10)",
              "timedOut": null,
              "duration": 20176,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: expected 'https://www.imdb.com/search/title/?genres=film_noir&sort=user_rating,desc&title_type=feature&num_votes=25000,&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=5aab685f-35eb-40f3-95f7-c53f09d542c3&pf_rd_r=7D8F60FBA7W7ZPPAE82W&pf_rd_s=right-6&pf_rd_t=15506&pf_rd_i=top&ref_=chttp_gnr_10' to include '/search/title/?genres=film-noir'",
                "estack": "AssertionError: Timed out retrying after 15000ms: expected 'https://www.imdb.com/search/title/?genres=film_noir&sort=user_rating,desc&title_type=feature&num_votes=25000,&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=5aab685f-35eb-40f3-95f7-c53f09d542c3&pf_rd_r=7D8F60FBA7W7ZPPAE82W&pf_rd_s=right-6&pf_rd_t=15506&pf_rd_i=top&ref_=chttp_gnr_10' to include '/search/title/?genres=film-noir'\n    selectGenre@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:93:16\n    [2]</<@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:51:16\n    resolveAndRunStepDefinition@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:10522:29\n    stepTest/<@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:9867:35\n    getRet@https://www.imdb.com/__cypress/runner/cypress_runner.js:137726:20\n    tryCatcher@https://www.imdb.com/__cypress/runner/cypress_runner.js:10798:23\n    ../../node_modules/bluebird/js/release/method.js/module.exports/Promise.try@https://www.imdb.com/__cypress/runner/cypress_runner.js:8072:29\n    thenFn@https://www.imdb.com/__cypress/runner/cypress_runner.js:137744:20\n    then@https://www.imdb.com/__cypress/runner/cypress_runner.js:138183:21\n    wrapByType/<@https://www.imdb.com/__cypress/runner/cypress_runner.js:153308:21\n    runCommand/<@https://www.imdb.com/__cypress/runner/cypress_runner.js:152716:15\n    tryCatcher@https://www.imdb.com/__cypress/runner/cypress_runner.js:10798:23\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseFromHandler@https://www.imdb.com/__cypress/runner/cypress_runner.js:8733:31\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise@https://www.imdb.com/__cypress/runner/cypress_runner.js:8790:18\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseCtx@https://www.imdb.com/__cypress/runner/cypress_runner.js:8827:10\n    _drainQueueStep@https://www.imdb.com/__cypress/runner/cypress_runner.js:5509:12\n    _drainQueue@https://www.imdb.com/__cypress/runner/cypress_runner.js:5498:24\n    ../../node_modules/bluebird/js/release/async.js/</Async.prototype._drainQueues@https://www.imdb.com/__cypress/runner/cypress_runner.js:5514:16\n    Async/this.drainQueues@https://www.imdb.com/__cypress/runner/cypress_runner.js:5384:14\n",
                "diff": null
              },
              "uuid": "db80914b-faa4-45ed-bfa7-1df952f052a2",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #11)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #11)",
              "timedOut": null,
              "duration": 6240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4a75b88e-bce7-430c-bc6a-f9ca86351603",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #12)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #12)",
              "timedOut": null,
              "duration": 5490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb137787-ac68-43a2-8019-c02b0da8fa3c",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #13)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #13)",
              "timedOut": null,
              "duration": 6071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "14c6f823-24e9-4f3e-86f6-68b1214de752",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #14)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #14)",
              "timedOut": null,
              "duration": 5690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c5e91996-d1bd-48a3-911e-55a57b35cbfc",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #15)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #15)",
              "timedOut": null,
              "duration": 5850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0a925fed-763a-4deb-961b-48705e0d1cba",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #16)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #16)",
              "timedOut": null,
              "duration": 5471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "68658d27-23f0-4e5d-b7a5-edfc5c1c4e53",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #17)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #17)",
              "timedOut": null,
              "duration": 21400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: expected 'https://www.imdb.com/search/title/?genres=sci_fi&sort=user_rating,desc&title_type=feature&num_votes=25000,&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=5aab685f-35eb-40f3-95f7-c53f09d542c3&pf_rd_r=JXNFPWC9D5JT0SRSS62N&pf_rd_s=right-6&pf_rd_t=15506&pf_rd_i=top&ref_=chttp_gnr_17' to include '/search/title/?genres=sci-fi'",
                "estack": "AssertionError: Timed out retrying after 15000ms: expected 'https://www.imdb.com/search/title/?genres=sci_fi&sort=user_rating,desc&title_type=feature&num_votes=25000,&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=5aab685f-35eb-40f3-95f7-c53f09d542c3&pf_rd_r=JXNFPWC9D5JT0SRSS62N&pf_rd_s=right-6&pf_rd_t=15506&pf_rd_i=top&ref_=chttp_gnr_17' to include '/search/title/?genres=sci-fi'\n    selectGenre@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:93:16\n    [2]</<@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:51:16\n    resolveAndRunStepDefinition@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:10522:29\n    stepTest/<@https://www.imdb.com/__cypress/tests?p=cypress\\integration\\features\\sort.feature:9867:35\n    getRet@https://www.imdb.com/__cypress/runner/cypress_runner.js:137726:20\n    tryCatcher@https://www.imdb.com/__cypress/runner/cypress_runner.js:10798:23\n    ../../node_modules/bluebird/js/release/method.js/module.exports/Promise.try@https://www.imdb.com/__cypress/runner/cypress_runner.js:8072:29\n    thenFn@https://www.imdb.com/__cypress/runner/cypress_runner.js:137744:20\n    then@https://www.imdb.com/__cypress/runner/cypress_runner.js:138183:21\n    wrapByType/<@https://www.imdb.com/__cypress/runner/cypress_runner.js:153308:21\n    runCommand/<@https://www.imdb.com/__cypress/runner/cypress_runner.js:152716:15\n    tryCatcher@https://www.imdb.com/__cypress/runner/cypress_runner.js:10798:23\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseFromHandler@https://www.imdb.com/__cypress/runner/cypress_runner.js:8733:31\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise@https://www.imdb.com/__cypress/runner/cypress_runner.js:8790:18\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseCtx@https://www.imdb.com/__cypress/runner/cypress_runner.js:8827:10\n    _drainQueueStep@https://www.imdb.com/__cypress/runner/cypress_runner.js:5509:12\n    _drainQueue@https://www.imdb.com/__cypress/runner/cypress_runner.js:5498:24\n    ../../node_modules/bluebird/js/release/async.js/</Async.prototype._drainQueues@https://www.imdb.com/__cypress/runner/cypress_runner.js:5514:16\n    Async/this.drainQueues@https://www.imdb.com/__cypress/runner/cypress_runner.js:5384:14\n",
                "diff": null
              },
              "uuid": "27c81e5b-6a70-4bd1-b152-3667467c435a",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #18)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #18)",
              "timedOut": null,
              "duration": 5798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cefefb68-e3e1-4c94-86c3-2985840eb019",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #19)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #19)",
              "timedOut": null,
              "duration": 5768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "57bc4e29-b6d4-40bf-a6b2-acdaf0716a17",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #20)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #20)",
              "timedOut": null,
              "duration": 5979,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ed9cf41f-c7b0-470e-9586-ec03693d2638",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter with film genre (example #21)",
              "fullTitle": "Sorting and filtering the Film list Filter with film genre (example #21)",
              "timedOut": null,
              "duration": 5892,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ef587051-8f37-49cd-8882-eb17a4b17375",
              "parentUUID": "409a1a20-ab97-47c3-8a65-ad317ebce194",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad4d3c30-8c26-4ac8-908e-088275cea871",
            "251b6fcc-09dd-4b8f-8a81-4e315b850e67",
            "b14d6b5c-6364-4e04-8e9d-3f9b62d1c911",
            "0c8fe110-1ecf-46da-be8a-534725ac0591",
            "af6644c0-18e1-48ae-abf4-3a0059fa2cc2",
            "f19d0229-d31f-478a-bec0-8d7cc126ce79",
            "8943057e-12be-41ac-8f32-b95aa70ce6d4",
            "1f8a282b-1057-4124-aa16-90ff3a9e09ed",
            "b22de56c-c0b5-4155-be8b-a29a4f87abed",
            "b85d2c89-96ed-4a01-80c0-18bf6b8b11a3",
            "8a8cfa5d-ffdf-413b-8aef-bd66f426deea",
            "82d8daae-0774-4b8f-a906-b4f930f2a12d",
            "18416b0e-1e25-48ee-a7ec-d88582ff33ac",
            "44de14f0-9ad2-4f03-92a6-90911aad6d75",
            "4a75b88e-bce7-430c-bc6a-f9ca86351603",
            "cb137787-ac68-43a2-8019-c02b0da8fa3c",
            "14c6f823-24e9-4f3e-86f6-68b1214de752",
            "c5e91996-d1bd-48a3-911e-55a57b35cbfc",
            "0a925fed-763a-4deb-961b-48705e0d1cba",
            "68658d27-23f0-4e5d-b7a5-edfc5c1c4e53",
            "cefefb68-e3e1-4c94-86c3-2985840eb019",
            "57bc4e29-b6d4-40bf-a6b2-acdaf0716a17",
            "ed9cf41f-c7b0-470e-9586-ec03693d2638",
            "ef587051-8f37-49cd-8882-eb17a4b17375"
          ],
          "failures": [
            "db80914b-faa4-45ed-bfa7-1df952f052a2",
            "27c81e5b-6a70-4bd1-b152-3667467c435a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 181848,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}